{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst btnStart = document.querySelector('[data-start]');\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate < new Date()) {\n           iziToast.error({\n             title: 'Error',\n             message: 'Please choose a date in the future!',\n             position: 'topRight',\n           });\n      btnStart.disabled = true;\n    } else {\n      btnStart.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n  },\n};\nflatpickr('#datetime-picker', options);\n\nlet timerId = null;\nbtnStart.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n  btnStart.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const timeLeft = userSelectedDate - now;\n    if (timeLeft < 0) {\n      clearInterval(timerId);\n      iziToast.info({\n        title: 'Timer finished',\n        message: 'Time is up!',\n      });\n      updateTimerDisplay(0, 0, 0, 0);\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n    updateTimerDisplay(days, hours, minutes, seconds);\n  }, 1000);\n});\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n     return String(value).padStart(2, '0');\n}\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n    document.querySelector('[data-days]').textContent = addLeadingZero(days); \n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours); \n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes); \n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds); \n}"],"names":["btnStart","userSelectedDate","options","selectedDates","selectedDate","iziToast","flatpickr","timerId","timeLeft","updateTimerDisplay","days","hours","minutes","seconds","convertMs","ms","addLeadingZero","value"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EACtD,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,EAAe,IAAI,MAChBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,sCACT,SAAU,UACvB,CAAY,EACNL,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBC,EAAmBG,EAEtB,CACH,EACAE,EAAU,mBAAoBJ,CAAO,EAErC,IAAIK,EAAU,KACdP,EAAS,iBAAiB,QAAS,IAAM,CAClCC,IACLD,EAAS,SAAW,GAEpBO,EAAU,YAAY,IAAM,CAE1B,MAAMC,EAAWP,EADL,IAAI,KAEhB,GAAIO,EAAW,EAAG,CAChB,cAAcD,CAAO,EACrBF,EAAS,KAAK,CACZ,MAAO,iBACP,QAAS,aACjB,CAAO,EACDI,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7B,MACD,CACD,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAC5DC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACjD,EAAE,GAAI,EACT,CAAC,EAGD,SAASC,EAAUC,EAAI,CAQrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASG,EAAeC,EAAO,CAC1B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACzC,CAEA,SAASR,EAAmBC,EAAMC,EAAOC,EAASC,EAAS,CACvD,SAAS,cAAc,aAAa,EAAE,YAAcG,EAAeN,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcM,EAAeL,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcK,EAAeJ,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,CACjF"}